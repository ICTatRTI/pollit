.feditor-form{ko(visible: 'active')}
  = f.hidden_field :kind
  = f.hidden_field :id
  = f.hidden_field :field_name
  = f.hidden_field :position

  %p.title Title
  %p.smalltext The name of this question as it is presented.
  = f.text_field :title, :class => 'feditor-field-name required', 'data-bind' => 'attr: {readonly: readonly}'
  %hr

  %p.title Description
  %p.smalltext Additional help for this question.
  = f.text_field :description, :class => 'feditor-field-hint', 'data-bind' => 'attr: {readonly: readonly}'
  %hr

  - ko_if 'kind_text' do
    = f.check_box :collects_respondent, :class => 'feditor-capture-respondent', :title => "This question will not be sent to the respondents, but will be used to automatically store their phone numbers in the responses spreadsheet.", :type => "checkbox"
    Stores sender phone number

  - ko_if 'kind_numeric' do
    %p.title Range
    %p.smalltext Range of values accepted for this question
    = f.text_field :numeric_min, :class => "w13", :'data-bind' => 'attr: {readonly: readonly}'
    %span.smalltext to
    = f.text_field :numeric_max, :class => "w13", :'data-bind' => 'attr: {readonly: readonly}'
    %hr

  - ko_if 'kind_options' do
    %p.title Options
    %p.smalltext Possible values for this question.
    %ul.feditor-form-options.clist.w30
      %li.feditor-form-option{ko(foreach: 'options')}
        = text_field_tag "#{f.object_name}[options][]", nil, :'data-bind' => 'attr: {readonly: $parent.readonly()}, value: text', :class => "ux-clist"
        %a.right.removeoption{ko(click: 'remove'), href: '#'} &#215;
      .clear

  .clear

  - ko_if 'editable() && kind_options()' do
    .feditor-form-option-new.require_from_group{ko(with: 'new_option')}
      %input.small.option{ko(value: 'text'), type: 'text', placeholder: 'Enter a new option'}
      %a.right.addoption{ko(click: 'add')} +
    .clear


