#form-editor
  .feditor-list.left
    .feditor{ko(foreach: 'questions')}
      .feditor-top
      .feditor-container{ko(css: {'"collects-respondent"' => 'collects_respondent'})}
        - ko_if 'removable' do
          %a.remove_field{ko(click: 'remove')} X

        .feditor-button
          %button{ko(click: 'set_active', css: 'editor_class'), type: :button}

        .feditor-content
          %h1.feditor-field-name{ko(text: 'title')}
          %span.hint.feditor-field-hint
            - ko_if 'description() && description().length > 0' do
              Description:
              = ko_text 'description'
          %span.collects-respondent-hint{:title => "This question will not be sent to the respondents, but will be used to automatically store their phone numbers in the responses spreadsheet." }
            Stores sender phone number
          / - if question.invalid?
          /   - unless question.description.blank?
          /     %br
          /   %label.error
          /     = question.errors.full_messages.to_sentence
          /   .clear

    .feditor-add
      .feditor-add-top
      - ko_if 'questions().length == 0' do
        .addnewbot.empty
      - ko_if 'questions().length > 0' do
        .feditor-add-container
          .feditor-add-content
            %h1 Add a new question
            - Question.new.enums(:kind).hash.each do |question_type, label|
              - if question_type != :unsupported
                %span
                  %button{ko(click: "add_question_handler('#{question_type}')", css: "editor_class_for('#{question_type}')"), type: 'button'}
                  %br/
                  = label

  .feditor-sidebar.box.right.w30{ko(if: 'questions().length > 0')}
    = f.fields_for :questions do |g|
      = render :partial => 'polls/form_editor/question_form', :locals => {f: g}

  .clear
